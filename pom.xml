<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.github.sawied</groupId>
	<artifactId>microservice</artifactId>
	<version>1.0.1-SNAPSHOT</version>
	<packaging>pom</packaging>
	<name>parent</name>
	<description>This project used to do all tasks of building and dependencies management.</description>


	<!-- Sonar setting, currently, use oracle as data persistence PAO 
	install sonar as a docker container,please following below guide: 	
	-->
	<profiles>
		<profile>
			<id>sonar</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<sonar.jdbc.url>jdbc:oracle:thin:@localhost:1521:xe</sonar.jdbc.url>
				<sonar.jdbc.driver>oracle.jdbc.OracleDriver</sonar.jdbc.driver>
				<sonar.jdbc.username>sonar</sonar.jdbc.username>
				<sonar.jdbc.password>password</sonar.jdbc.password>
				<!-- SERVER ON A REMOTE HOST -->
				<sonar.host.url>http://localhost:9000</sonar.host.url>
			</properties>
		</profile>
	</profiles>


	<modules>
		<!-- -->
		<module>microservice-commons</module>
		<module>microservice-eureka-server</module>
		<module>microservice-oauth2-server</module>
		<module>microservice-apigateway-server</module>
		<module>microservice-application-web</module>

		<module>microservice-social-cloud</module>
	</modules>

	<properties>
		<project.phase>SNAPSHOT</project.phase>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<compile.version>1.8</compile.version>
		<maven.compiler.encoding>UTF-8</maven.compiler.encoding>
		<dependency.locations.enabled>false</dependency.locations.enabled>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<sonar.language>java</sonar.language>
		<httpclient.version>4.5.2</httpclient.version>
		<swagger.markup.version>1.3.3</swagger.markup.version>
		<swagger2markup.plugin.version>1.2.0</swagger2markup.plugin.version>
		<springfox.version>2.9.2</springfox.version>
		<itext.version>2.1.7</itext.version>
		<pdfbox.version>2.0.12</pdfbox.version>
		<bouncycastle.version>1.54</bouncycastle.version>
		<dockerfile.version>1.4.8</dockerfile.version>
		<ehcache.version>3.6.1</ehcache.version>
		<hibernate.version>5.3.7.Final</hibernate.version>
		<derby.version>10.14.1.0</derby.version>
		<fileupload.version>1.3.3</fileupload.version>
		<java.version>1.8</java.version>
		<spring-cloud.version>Hoxton.SR3</spring-cloud.version>
		<spring-boot.version>2.2.5.RELEASE</spring-boot.version>
		<h2-version>1.4.199</h2-version>
	</properties>


	<dependencyManagement>

		<dependencies>

			<dependency>
				<!-- Import dependency management from Spring Boot -->
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-dependencies</artifactId>
				<version>${spring-boot.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<!-- spring cloud major version -->
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter</artifactId>
				<version>${spring-boot.version}</version>
				<exclusions>
					<exclusion>
						<groupId>ch.qos.logback</groupId>
						<artifactId>logback-classic</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.springframework.boot</groupId>
						<artifactId>spring-boot-starter-logging</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-web</artifactId>
				<version>${spring-boot.version}</version>
				<exclusions>
					<exclusion>
						<groupId>ch.qos.logback</groupId>
						<artifactId>logback-classic</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.springframework.boot</groupId>
						<artifactId>spring-boot-starter-logging</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<!-- httpclient -->
			<dependency>
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>httpclient</artifactId>
				<version>${httpclient.version}</version>
				<exclusions>
					<exclusion>
						<groupId>commons-logging</groupId>
						<artifactId>commons-logging</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<dependency>
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>httpclient-cache</artifactId>
				<version>${httpclient.version}</version>
			</dependency>



			<!-- mysql driver -->
			<!-- https://mvnrepository.com/artifact/mysql/mysql-connector-java -->
			<dependency>
				<groupId>mysql</groupId>
				<artifactId>mysql-connector-java</artifactId>
				<version>8.0.12</version>
			</dependency>

			<dependency>
				<groupId>org.apache.derby</groupId>
				<artifactId>derby</artifactId>
				<version>${derby.version}</version>
				<scope>test</scope>
			</dependency>

			<!-- https://mvnrepository.com/artifact/org.hibernate/hibernate-envers -->

			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-core</artifactId>
				<version>${hibernate.version}</version>
			</dependency>

			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-envers</artifactId>
				<version>${hibernate.version}</version>
			</dependency>


			<!-- https://mvnrepository.com/artifact/commons-fileupload/commons-fileupload -->
			<dependency>
				<groupId>commons-fileupload</groupId>
				<artifactId>commons-fileupload</artifactId>
				<version>${fileupload.version}</version>
			</dependency>
			
			<dependency>
				<groupId>commons-io</groupId>
				<artifactId>commons-io</artifactId>
				<version>2.2</version>
			</dependency>

			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>javax.servlet-api</artifactId>
				<version>3.0.1</version>
				<scope>provided</scope>
			</dependency>


			<dependency>
				<groupId>io.github.swagger2markup</groupId>
				<artifactId>swagger2markup</artifactId>
				<version>${swagger.markup.version}</version>
			</dependency>


			<!-- https://mvnrepository.com/artifact/com.lowagie/itext -->
			<dependency>
				<groupId>com.lowagie</groupId>
				<artifactId>itext</artifactId>
				<version>${itext.version}</version>
			</dependency>


			<dependency>
				<groupId>org.apache.pdfbox</groupId>
				<artifactId>pdfbox</artifactId>
				<version>${pdfbox.version}</version>
			</dependency>

			<!-- https://mvnrepository.com/artifact/org.apache.pdfbox/fontbox -->
			<dependency>
				<groupId>org.apache.pdfbox</groupId>
				<artifactId>fontbox</artifactId>
				<version>${pdfbox.version}</version>
			</dependency>

			<dependency>
				<groupId>org.bouncycastle</groupId>
				<artifactId>bcmail-jdk15on</artifactId>
				<version>${bouncycastle.version}</version>
			</dependency>

			<!-- ehcache -->
			<dependency>
				<groupId>org.ehcache</groupId>
				<artifactId>ehcache</artifactId>
				<version>${ehcache.version}</version>
			</dependency>

			<!-- dependency to itself -->
			<dependency>
				<groupId>com.github.sawied</groupId>
				<artifactId>microservice-commons</artifactId>
				<version>${project.version}</version>
			</dependency>


			<!-- package related dependencies -->

			<dependency>
				<groupId>commons-daemon</groupId>
				<artifactId>commons-daemon</artifactId>
				<version>1.1.0</version>
			</dependency>

			<dependency>
				<groupId>com.sun.winsw</groupId>
				<artifactId>winsw</artifactId>
				<classifier>bin</classifier>
				<type>exe</type>
				<version>2.1.2</version>
			</dependency>

		</dependencies>

	</dependencyManagement>

	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-project-info-reports-plugin</artifactId>
				<version>2.9</version>
				<reportSets>
					<reportSet>
						<reports><!-- select reports -->
							<report>index</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>


			<plugin>

				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>2.17</version>
				<reportSets>
					<reportSet>
						<inherited>false</inherited>
						<reports>
							<report>checkstyle-aggregate</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>



			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jxr-plugin</artifactId>
				<version>2.5</version>
				<reportSets>
					<reportSet>
						<inherited>false</inherited>
						<configuration>
						</configuration>
						<id>aggregate</id>
						<reports>
							<report>aggregate</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>

		</plugins>
	</reporting>




	<build>
		<finalName>${project.artifactId}-${project.phase}</finalName>
		<plugins>

			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.0.2</version>
				<configuration>
					<source>${compile.version}</source>
					<target>${compile.version}</target>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.6</version>
				<configuration>
					<warSourceDirectory>webapp</warSourceDirectory>
					<failOnMissingWebXml>false</failOnMissingWebXml>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-site-plugin</artifactId>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-release-plugin</artifactId>
				<version>3.0.0-M1</version>
			</plugin>

			<plugin>
				<groupId>org.sonarsource.scanner.maven</groupId>
				<artifactId>sonar-maven-plugin</artifactId>
				<version>3.2</version>
			</plugin>
			<plugin>
				<groupId>com.spotify</groupId>
				<artifactId>dockerfile-maven-plugin</artifactId>
				<configuration>
					<skip>true</skip>
				</configuration>
			</plugin>



		</plugins>

		<pluginManagement>

			<plugins>
				<plugin>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-maven-plugin</artifactId>
					<version>${spring-boot.version}</version>
					<inherited>true</inherited>
					<executions>
						<execution>
							<goals>
								<goal>repackage</goal>
								<goal>build-info</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
						<additionalProperties>
							<project.name>${project.groupId}:${project.artifactId}</project.name>
							<project.version>${project.version}</project.version>
							<project.description>${project.description}</project.description>
							<java.target>${compile.version}</java.target>
						</additionalProperties>
					</configuration>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-site-plugin</artifactId>
					<version>3.6</version>
					<dependencies>
						<dependency><!-- add support for ssh/scp -->
							<groupId>org.apache.maven.wagon</groupId>
							<artifactId>wagon-webdav-jackrabbit</artifactId>
							<version>2.10</version>
						</dependency>
					</dependencies>
				</plugin>

				<!-- docker file maven plugin version -->

				<plugin>
					<groupId>com.spotify</groupId>
					<artifactId>dockerfile-maven-plugin</artifactId>
					<version>${dockerfile.version}</version>
				</plugin>


				<!-- generate swagger json spec file in test phase -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<configuration>
						<systemPropertyVariables>
							<io.springfox.staticdocs.outputDir>${swagger.output.dir}</io.springfox.staticdocs.outputDir>
							<io.springfox.staticdocs.snippetsOutputDir>${swagger.snippetOutput.dir}</io.springfox.staticdocs.snippetsOutputDir>
						</systemPropertyVariables>
					</configuration>
				</plugin>


				<!-- First, use the swagger2markup plugin to generate asciidoc -->
				<plugin>
					<groupId>io.github.swagger2markup</groupId>
					<artifactId>swagger2markup-maven-plugin</artifactId>
					<version>${swagger2markup.version}</version>
					<dependencies>
						<dependency>
							<groupId>io.github.swagger2markup</groupId>
							<artifactId>swagger2markup-import-files-ext</artifactId>
							<version>${swagger2markup.version}</version>
						</dependency>
						<dependency>
							<groupId>io.github.swagger2markup</groupId>
							<artifactId>swagger2markup-spring-restdocs-ext</artifactId>
							<version>${swagger2markup.version}</version>
						</dependency>
					</dependencies>
				</plugin>


				<!-- generate html output -->


				<plugin>
					<groupId>org.asciidoctor</groupId>
					<artifactId>asciidoctor-maven-plugin</artifactId>
					<dependencies>
						<dependency>
							<groupId>org.springframework.restdocs</groupId>
							<artifactId>spring-restdocs-asciidoctor</artifactId>
							<version>2.0.2.RELEASE</version>
						</dependency>
					</dependencies>
				</plugin>


			</plugins>
		</pluginManagement>

	</build>



	<scm>
		<connection>scm:git:https://github.com/sawied/microservices.git</connection>
	  <tag>HEAD</tag>
  </scm>


	<pluginRepositories>
		<pluginRepository>
			<id>aliyun-plugin</id>
			<url>http://maven.aliyun.com/nexus/content/groups/public/</url>
		</pluginRepository>
	</pluginRepositories>

	<repositories>
		<repository>
			<id>aliyun</id>
			<url>http://maven.aliyun.com/nexus/content/groups/public/</url>
			<releases>
				<updatePolicy>never</updatePolicy>
			</releases>
			<snapshots>
				<updatePolicy>never</updatePolicy>
			</snapshots>
		</repository>

		<repository>
			<id>jcenter</id>
			<url>https://jcenter.bintray.com/io/github/swagger2markup/swagger2markup/</url>
			<releases>
				<updatePolicy>never</updatePolicy>
			</releases>
			<snapshots>
				<updatePolicy>never</updatePolicy>
			</snapshots>
		</repository>

		<repository>
			<id>geotoolkit</id>
			<name>geotoolkit</name>
			<url>http://maven.geotoolkit.org/</url>
			<releases>
				<updatePolicy>never</updatePolicy>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<updatePolicy>never</updatePolicy>
				<enabled>false</enabled>
			</snapshots>
		</repository>

		<repository>
			<id>openmind</id>
			<name>openmind</name>
			<layout>default</layout>
			<releases>
				<enabled>true</enabled>
			</releases>
			<url>http://repository.openmindonline.it/</url>
		</repository>

		<repository>
			<id>jenkins</id>
			<name>Jenkins Repository</name>
			<url>http://repo.jenkins-ci.org/releases</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>

	</repositories>

</project>