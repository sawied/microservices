apiVersion: v1
kind: Pod
metadata:
  name: microservice-social-cloud
  labels:
    env: dev
    app: microservice-social-cloud
  namespace: sawied
spec:
  containers:
    - image: microservice/microservice-oauth2-social:0.0.1-SNAPSHOT
      name: microservice-social-cloud
      imagePullPolicy: IfNotPresent
      ports:
        - containerPort: 80
      envFrom:
        - secretRef:
           name: git-secret
---
apiVersion: v1
kind: Service
metadata:
  name: microservice-social-cloud-service
  namespace: sawied
spec:
  type: NodePort
  ports:
    - port: 80
      targetPort: 80
      nodePort: 80
  selector:
    app: microservice-social-cloud

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
  labels:
    app: nginx
spec:
  replicas: 3
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
        - name: nginx
          image: nginx:1.14.2
          ports:
            - containerPort: 80
          volumeMounts:
           - mountPath: /cache
              name: cache-volume
      volumes:
        - name: cache-volume
          emptyDir: {}

---

apiVersion: v1
kind: Pod
metadata:
  name: fortune
spec:
  containers:
    - image: luksa/fortune
      name: html-generator
      volumeMounts:
        - name: html
          mountPath: /var/htdocs
    - image: nginx:alpine
      name: web-server
      volumeMounts:
        - name: html
          mountPath: /usr/share/nginx/html
          readOnly: true
      ports:
        - containerPort: 80
          protocol: TCP
  volumes:
    - name: html
      emptyDir: {}
---

apiVersion: v1
kind: Pod
metadata:
  name: dapi-test-pod
spec:
  containers:
    - name: test-container
      image: k8s.gcr.io/busybox
      command: [ "/bin/sh", "-c", "env" ]
      env:
        - name: SPECIAL_LEVEL_KEY
          valueFrom:
            configMapKeyRef:
              name: special-config
              key: special.how
  restartPolicy: Never


---
apiVersion: v1
kind: Pod
metadata:
  name: dapi-test-pod
spec:
  containers:
    - name: test-container
      image: k8s.gcr.io/busybox
      command: [ "/bin/sh", "-c", "ls /etc/config/" ]
      volumeMounts:
        - name: config-volume
          mountPath: /etc/config
  volumes:
    - name: config-volume
      configMap:
        name: special-config
  restartPolicy: Never
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: ebs-pv
  labels:
    type: amazonEBS
spec:
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteOnce
  awsElasticBlockStore:
    volumeID: vol-079c492115a7be6e1
    fsType: ext4
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: nginx-pvc
  labels:
    type: amazonEBS
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: nginx-with-pvc
spec:
  replicas: 1
  template:
    metadata:
      labels:
        service: nginx
        app: test
    spec:
      containers:
        - image: nginx
          name: nginx-with-pvc
          volumeMounts:
            - mountPath: /test-ebs
              name: my-pvc
      volumes:
        - name: my-pvc
          persistentVolumeClaim:
            claimName: nginx-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: backend-service
spec:
  selector:
    app: backend
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 9376
    - name: https
      protocol: TCP
      port: 443
      targetPort: 9377